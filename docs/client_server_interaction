Это список функций, с помощью который клиент может взаимодействовать с сервером.

Каждая функция имеет название и список аргументов. Это значит, что чтобы применить эту функцию, надо обратитьтся по ссылке /<funcion-name> с kwargs с ключами, соответствующим списку аргументов функии.

Все данные передаютстя в формате JSON.


1. getRoomByKey(key) - функция получения информации о комнате по ключу

Возвращает:

- exists (bool) - существует ли комната с таким ключом
если exists = true, также возвращается:
- game (Game) - объект, содержащий информацию о комнате с таким ключом


2. joinRoom(key, username) - функция, присоединяющая игрока к комнате.

Возвращает:

- success (bool) - получилось ли присоединиться к комнате. В частности, если username совпадает с одним из уже существующих или игра уже начата, возможности подключиться быть не должно.


3. leaveRoom(key, username) - функция, удаляющая игрока из комнаты.

Возвращает:

- success (bool) - получилось ли удалить игрока из команты.


4. startGame(key) - функция, начинающая игру с ключом key.

Возвращает:

- success (bool) - получилось ли начать игру.


5. playerJoined - сигнал, посылаемый серевером всем клиентам в комнате при присоединении нового игрока

Хранит:

- username (string) - имя игрока


6. playerLeft - сигнал, посылаемый серевером всем клиентам в комнате при уходе игрока

Хранит:

- username (string) - имя игрока


7. becomeHost - сигнал, посылаемый сервером клиенту, который стал новым хостом при уходе старого.

Не хранит никакой дополнительной информации.


8. yourTurn - сигнал, посылаемый серевером клиенту, который будет объяснять слово

Не хранит никакой дополнительной информации.


9. startExplanation(key) - функция, вызов которой обозначает, что игрок готов начать объяснение слова

Возвращает:

- success (bool)


10. successfulExplanation(key) - игрок объяснил слово

Возвращает:

- success (bool)

11. endExplanation(key) - игрок предпочёл не объяснять слово

Возвращает:

- success (bool)
- cause (int = enum) - причина окончания объяснения
(0 - конец игры (последнее слово было либо угадано, либо – нет, 1 - ошибка, 2 - игрок сдался)


12. explanationStarted - сигнал о начале объяснения слова

Хранит:
- who (string) - имя объясняющего
- whom (string) - имя того, кому объясняют


13. explanationFinished - сигнал о конце объяснения слова

Не хранит никакой дополнительной информации.


14. wordNumberChange - сигнал, который вызывается при изменении числа слов в шляпе

Хранит:
- newWordsNumber (int) - новое количество оставшихся слов


15. gameEnd - сигнал о конце игры

Хранит:
- results (Results) - результаты игры


16. pickWord(key) - функция получения слова из шляпы

Возвращает:
- word (string) - слово




Структуры:

Game:
- playerList - упорядоченный список юзернеймов игроков. Первый из них является хостом, второй будет хостом, если первый покинет комнату, и т. д.
При присоединении игрока к комнате он добавляется в конец этого списка.

Results:
- Список результатов по убыванию. Каждый результат хранит:
	- username (string) - имя игрока
	- scoreExplained (int) - количество объяснённых слов
	- scoreGuessed (int) - количество отгаданных слов
